+ git config --list
+ git config --global [PROPERTY-NAME] [PROPERTY-VALUE]

SWITCH TO A SPECIFIC BRANCH
+ git checkout [BRANCH-NAME]

COMMIT ALL CHANGES
+ git add .
+ git commit -m [MESSAGE]
+ git push

UPDATE LOCAL REPOSITORY WITH THE CHANGES FROM THE REMOTE ONE
+ git pull [REMOTE-NAME] [BRANCH-NAME] (i.e: git pull origin master)
+ git fetch (should not be mandatory, because git pull = git fetch + git merge)

UNCOMMIT LOCAL CHANGES
+ git reset

SET A REMOTE REPOSITORY
git remote add [NAME] [GIT-REPO-URL] (i.e: git remote add origin http://github.com/mihai.git/)

SHOW ALL REPOSITORIES
git remote show

REMOVE FILE/FOLDER FROM REMOTE REPOSITORY
git rm --cached [FILENAME]
git commit -m [MESSAGE]
git push

.GITIGNORE LOG FILES
git rm --cached [FILENAME]
add [FILENAME] to .gitignore

BRANCH COMMANDS
+ git branch -d [BRANCH-NAME] - delete branch [BRANCH-NAME]
+ git checkout [BRANCH-NAME] - switch to [BRANCH-NAME] branch
+ git checkout -b [BRANCH-NAME] - creates a new branch [BRANCH-NAME] and switches to it
+ git push [REMOTE-NAME] --delete [BRANCH-NAME] - delete branch from remote

git merge vs. git rebase
- git merge - one final commit
- git rebase - rewrites commit history

VARIOUS COMMANDS
+ git stash - stores current work in a stash for later use
+ git unstash - restores work from stash
+ git diff - show differences (between files, folder, branches, etc.)
+ git show - show HEAD commit compared with local changes
+ git reset --hard - undo local (back to the HEAD)
+ git revert - creates a commit that undo local changes